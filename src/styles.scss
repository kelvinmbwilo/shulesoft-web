@use "styles/variables";
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.
@use 'styles/palette' as palette;

@tailwind base;
@tailwind components;
@tailwind utilities;

@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$shulesoft-frontend-primary: mat.define-palette(palette.$primary-pat);
$shulesoft-frontend-accent: mat.define-palette(palette.$accent-pat, A200, A100, A400);

// The warn palette is optional (defaults to red).
$shulesoft-frontend-warn: mat.define-palette(palette.$warn-pat);
$ng-material-tailwind-typography: mat.define-typography-config(
  $font-family: theme("fontFamily.sans")
);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$shulesoft-frontend-theme: mat.define-light-theme((
  color: (
    primary: $shulesoft-frontend-primary,
    accent: $shulesoft-frontend-accent,
    warn: $shulesoft-frontend-warn,
  ),
  typography: $ng-material-tailwind-typography
));
@include mat.all-component-themes($shulesoft-frontend-theme);
@include mat.all-component-typographies($shulesoft-frontend-theme);

.light-theme {
  $shule-soft-front-end-light-theme: mat.define-light-theme((
    color: (
      primary: $shulesoft-frontend-primary,
      accent: $shulesoft-frontend-accent,
      warn: $shulesoft-frontend-warn,
    ),
  typography: $ng-material-tailwind-typography
  ));
  @include mat.all-component-colors($shule-soft-front-end-light-theme);
  $fg_palette:map-get($shule-soft-front-end-light-theme, foreground);
  $bg_palette:map-get($shule-soft-front-end-light-theme, background);
  $fg:map-get($fg_palette, text);
  $bg:map-get($bg_palette, background);
  --fg: #{$fg};
  --bg: #{$bg};
}

.dark {
  $shule-soft-front-end-dark-theme: mat.define-dark-theme((
    color: (
      primary: $shulesoft-frontend-primary,
      accent: $shulesoft-frontend-accent,
      warn: $shulesoft-frontend-warn,
    ),
    typography: $ng-material-tailwind-typography
  ));
  @include mat.all-component-colors($shule-soft-front-end-dark-theme);
  $fg_palette:map-get($shule-soft-front-end-dark-theme, foreground);
  $bg_palette:map-get($shule-soft-front-end-dark-theme, background);
  $fg:map-get($fg_palette, text);
  $bg:map-get($bg_palette, background);
  --fg: #{$fg};
  --bg: #{$bg};
}

/* You can add global styles to this file, and also import other style files */
@font-face {
  font-family: 'Material Icons';
  font-style: normal;
  font-weight: 400;
  src: local('Material Icons'),
  local('MaterialIcons-Regular'),
  url(assets/fonts/MaterialIcons-Regular.ttf) format('truetype');
}

.material-icons {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;  /* Preferred icon size */
  display: inline-block;
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;

  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;

  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;

  /* Support for IE. */
  font-feature-settings: 'liga';
}

/* You can add global styles to this file, and also import other style files */
html, body { @apply h-full; }
body { @apply m-0 font-sans text-word-primary }

/* to make sure form field takes all the width */

.mat-form-field-appearance-outline .mat-form-field-infix {
  padding: 10px 0 10px 0 !important;
}

.mat-form-field {
  width: 100% !important;
}

.search-area {
  .mat-form-field-wrapper {
    padding-bottom: 0 !important;
  }

  .mat-form-field-appearance-outline .mat-form-field-wrapper {
    margin: 0 !important;
    margin-bottom: 5px !important;
    padding-left: 50px;
  }
  .mat-form-field-appearance-outline .mat-form-field-outline {
    color: var(--textcolor);
  }

  .mat-form-field-outline-start {
    border-radius: 28px 0 0 28px !important;
     min-width: 78px !important;
  }
  .mat-form-field-outline-end {
    border-radius: 0 28px 28px 0 !important;
  }
}

.mat-toolbar-row, .mat-toolbar-single-row {
  height: 80px!important;
}

.sidenav-container {

  .mat-expansion-panel:not([class*='mat-elevation-z']) {
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2), 0 0 0 0 rgba(0, 0, 0, 0.14), 0 0 0 0 rgba(0, 0, 0, 0.12) !important;
  }

  .mat-expansion-panel-header {
    padding: 0 15px !important;
  }

  .mat-expansion-panel-body {
    padding: 0 0 0 !important;
  }
}
